;Warning! Make sure you are in the cogs/core directory while working with compile-tr, else it throws doc folder not found exception.


* (load "~/cogs/core/compile-tr.lisp")

T
* (compile-tr "~/cogs/core/doc/eve.ded" '(V V3 Ving))
File created at doc/raised-lex-rules.ded
The rules also set to the global variable *RAISED-LEX-RULES*
NIL

* ;Above will start type-raising on eve.ded, using the morphs specified in the second argument (V V3 Ving). Output is a file named raised-lex-rules.ded on your ~/cogs/core/doc/


* (add-tr-to-grammar) ;adds *raised-lex-rules* at the end of *ccg-grammar*

(((KEY 1) (PHON THE) (MORPH D)
  (SYN (((BCAT NP) (FEATS NIL)) (DIR FS) (MODAL STAR) ((BCAT N) (FEATS NIL))))
  (SEM (LAM X X)) (PARAM 1.0))
 ((KEY 2) (PHON MAN) (MORPH N) (SYN ((BCAT N) (FEATS NIL))) (SEM "MAN")
  (PARAM 1.0))
 ((KEY 3) (PHON .......................


* (load "~/cogs/core/compile-tr.lisp")

T

* ;above call made to load the .lisp file again to clear all data saved after calling compile-tr. Below call enables us to work with grammar to see what has been type-raised, kind of a debugging function.

* (debug-tr "~/cogs/core/doc/eve.ded" '(V V3 Ving))
File created at doc/raised-lex-items.ded
The rules also set to the global variable *RAISED-LEX-ITEMS*
NIL

* ;again to start type-raising on eve.ded, this time instead of (outsyn xxx) and (outsem xxx), pairs like (phon xxx) and (morph xxx) are added to make debugging possible. Previously generated raised-lex-rules and output of this function named raised-lex-items.ded (generated at ~/cogs/core/doc/) should have exactly the same amount of (key xxx)s.
(dribble)
